{"src/components/A.react.js": {"description": "", "displayName": "A", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "download": {"description": "Indicates that the hyperlink is to be used for downloading a resource.", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "href": {"description": "The URL of a linked resource.", "required": false, "type": {"name": "string"}}, "hrefLang": {"description": "Specifies the language of the linked resource.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "media": {"description": "Specifies a hint of the media for which the linked resource was designed.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "rel": {"description": "Specifies the relationship of the target object to the link object.", "required": false, "type": {"name": "string"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "shape": {"description": "", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "target": {"description": "", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Abbr.react.js": {"description": "", "displayName": "Abbr", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Acronym.react.js": {"description": "", "displayName": "Acronym", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Address.react.js": {"description": "", "displayName": "Address", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Area.react.js": {"description": "", "displayName": "Area", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "alt": {"description": "Alternative text in case an image can't be displayed.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "coords": {"description": "A set of values specifying the coordinates of the hot-spot region.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "download": {"description": "Indicates that the hyperlink is to be used for downloading a resource.", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "href": {"description": "The URL of a linked resource.", "required": false, "type": {"name": "string"}}, "hrefLang": {"description": "Specifies the language of the linked resource.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "media": {"description": "Specifies a hint of the media for which the linked resource was designed.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "rel": {"description": "Specifies the relationship of the target object to the link object.", "required": false, "type": {"name": "string"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "shape": {"description": "", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "target": {"description": "", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Article.react.js": {"description": "", "displayName": "Article", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Aside.react.js": {"description": "", "displayName": "Aside", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Audio.react.js": {"description": "", "displayName": "Audio", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "autoPlay": {"description": "The audio or video should play as soon as possible.", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "controls": {"description": "Indicates whether the browser should show playback controls to the user.", "required": false, "type": {"name": "string"}}, "crossOrigin": {"description": "How the element handles cross-origin requests", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "loop": {"description": "Indicates whether the media should start playing from the start when it's finished.", "required": false, "type": {"name": "string"}}, "muted": {"description": "Indicates whether the audio will be initially silenced on page load.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "preload": {"description": "Indicates whether the whole resource, parts of it or nothing should be preloaded.", "required": false, "type": {"name": "string"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "src": {"description": "The URL of the embeddable content.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/B.react.js": {"description": "", "displayName": "B", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Base.react.js": {"description": "", "displayName": "Base", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "href": {"description": "The URL of a linked resource.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "target": {"description": "", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Basefont.react.js": {"description": "", "displayName": "Basefont", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Bdi.react.js": {"description": "", "displayName": "Bdi", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Bdo.react.js": {"description": "", "displayName": "Bdo", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Big.react.js": {"description": "", "displayName": "Big", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Blink.react.js": {"description": "", "displayName": "Blink", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Blockquote.react.js": {"description": "", "displayName": "Blockquote", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "cite": {"description": "Contains a URI which points to the source of the quote or change.", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Br.react.js": {"description": "", "displayName": "Br", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Button.react.js": {"description": "", "displayName": "Button", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "autoFocus": {"description": "The element should be automatically focused after the page loaded.", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "disabled": {"description": "Indicates whether the user can interact with the element.", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "form": {"description": "Indicates the form that is the owner of the element.", "required": false, "type": {"name": "string"}}, "formAction": {"description": "Indicates the action of the element, overriding the action defined in the <form>.", "required": false, "type": {"name": "string"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "name": {"description": "Name of the element. For example used by the server to identify the fields in form submits.", "required": false, "type": {"name": "string"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}, "type": {"description": "Defines the type of the element.", "required": false, "type": {"name": "string"}}, "value": {"description": "Defines a default value which will be displayed in the element on page load.", "required": false, "type": {"name": "string"}}}}, "src/components/Canvas.react.js": {"description": "", "displayName": "Canvas", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "height": {"description": "Specifies the height of elements listed here. For all other elements, use the CSS height property.        Note: In some instances, such as <div>, this is a legacy attribute, in which case the CSS height property should be used instead.", "required": false, "type": {"name": "string"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}, "width": {"description": "For the elements listed here, this establishes the element's width.        Note: For all other instances, such as <div>, this is a legacy attribute, in which case the CSS width property should be used instead.", "required": false, "type": {"name": "string"}}}}, "src/components/Caption.react.js": {"description": "", "displayName": "Caption", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Center.react.js": {"description": "", "displayName": "Center", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Cite.react.js": {"description": "", "displayName": "Cite", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Code.react.js": {"description": "", "displayName": "Code", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Col.react.js": {"description": "", "displayName": "Col", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "span": {"description": "", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Colgroup.react.js": {"description": "", "displayName": "Colgroup", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "span": {"description": "", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Command.react.js": {"description": "", "displayName": "Command", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "checked": {"description": "Indicates whether the element should be checked on page load.", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "disabled": {"description": "Indicates whether the user can interact with the element.", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "icon": {"description": "Specifies a picture which represents the command.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "radioGroup": {"description": "", "required": false, "type": {"name": "string"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}, "type": {"description": "Defines the type of the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Content.react.js": {"description": "", "displayName": "Content", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Data.react.js": {"description": "", "displayName": "Data", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Datalist.react.js": {"description": "", "displayName": "Datalist", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Dd.react.js": {"description": "", "displayName": "Dd", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Del.react.js": {"description": "", "displayName": "Del", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "cite": {"description": "Contains a URI which points to the source of the quote or change.", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dateTime": {"description": "Indicates the date and time associated with the element.", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Details.react.js": {"description": "", "displayName": "Details", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "open": {"description": "Indicates whether the details will be shown on page load.", "required": false, "type": {"name": "string"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Dfn.react.js": {"description": "", "displayName": "Dfn", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Dialog.react.js": {"description": "", "displayName": "Dialog", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Div.react.js": {"description": "", "displayName": "Div", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Dl.react.js": {"description": "", "displayName": "Dl", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Dt.react.js": {"description": "", "displayName": "Dt", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Element.react.js": {"description": "", "displayName": "Element", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Em.react.js": {"description": "", "displayName": "Em", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Embed.react.js": {"description": "", "displayName": "Embed", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "height": {"description": "Specifies the height of elements listed here. For all other elements, use the CSS height property.        Note: In some instances, such as <div>, this is a legacy attribute, in which case the CSS height property should be used instead.", "required": false, "type": {"name": "string"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "src": {"description": "The URL of the embeddable content.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}, "type": {"description": "Defines the type of the element.", "required": false, "type": {"name": "string"}}, "width": {"description": "For the elements listed here, this establishes the element's width.        Note: For all other instances, such as <div>, this is a legacy attribute, in which case the CSS width property should be used instead.", "required": false, "type": {"name": "string"}}}}, "src/components/Fieldset.react.js": {"description": "", "displayName": "Fieldset", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "disabled": {"description": "Indicates whether the user can interact with the element.", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "form": {"description": "Indicates the form that is the owner of the element.", "required": false, "type": {"name": "string"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "name": {"description": "Name of the element. For example used by the server to identify the fields in form submits.", "required": false, "type": {"name": "string"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Figcaption.react.js": {"description": "", "displayName": "Figcaption", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Figure.react.js": {"description": "", "displayName": "Figure", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Font.react.js": {"description": "", "displayName": "Font", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Footer.react.js": {"description": "", "displayName": "Footer", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Form.react.js": {"description": "", "displayName": "Form", "methods": [], "props": {"accept": {"description": "List of types the server accepts, typically a file type.", "required": false, "type": {"name": "string"}}, "acceptCharset": {"description": "List of supported charsets.", "required": false, "type": {"name": "string"}}, "accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "action": {"description": "The URI of a program that processes the information submitted via the form.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "autoComplete": {"description": "Indicates whether controls in this form can by default have their values automatically completed by the browser.", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "encType": {"description": "Defines the content type of the form date when the method is POST.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "method": {"description": "Defines which HTTP method to use when submitting the form. Can be GET (default) or POST.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "name": {"description": "Name of the element. For example used by the server to identify the fields in form submits.", "required": false, "type": {"name": "string"}}, "noValidate": {"description": "This attribute indicates that the form shouldn't be validated when submitted.", "required": false, "type": {"name": "string"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "target": {"description": "", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Frame.react.js": {"description": "", "displayName": "Frame", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Frameset.react.js": {"description": "", "displayName": "Frameset", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/H1.react.js": {"description": "", "displayName": "H1", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/H2.react.js": {"description": "", "displayName": "H2", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/H3.react.js": {"description": "", "displayName": "H3", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/H4.react.js": {"description": "", "displayName": "H4", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/H5.react.js": {"description": "", "displayName": "H5", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/H6.react.js": {"description": "", "displayName": "H6", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Header.react.js": {"description": "", "displayName": "Header", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Hgroup.react.js": {"description": "", "displayName": "Hgroup", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Hr.react.js": {"description": "", "displayName": "Hr", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/I.react.js": {"description": "", "displayName": "I", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Iframe.react.js": {"description": "", "displayName": "Iframe", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "height": {"description": "Specifies the height of elements listed here. For all other elements, use the CSS height property.        Note: In some instances, such as <div>, this is a legacy attribute, in which case the CSS height property should be used instead.", "required": false, "type": {"name": "string"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "name": {"description": "Name of the element. For example used by the server to identify the fields in form submits.", "required": false, "type": {"name": "string"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "sandbox": {"description": "Stops a document loaded in an iframe from using certain features (such as submitting forms or opening new windows).", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "src": {"description": "The URL of the embeddable content.", "required": false, "type": {"name": "string"}}, "srcDoc": {"description": "", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}, "width": {"description": "For the elements listed here, this establishes the element's width.        Note: For all other instances, such as <div>, this is a legacy attribute, in which case the CSS width property should be used instead.", "required": false, "type": {"name": "string"}}}}, "src/components/Img.react.js": {"description": "", "displayName": "Img", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "alt": {"description": "Alternative text in case an image can't be displayed.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "crossOrigin": {"description": "How the element handles cross-origin requests", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "height": {"description": "Specifies the height of elements listed here. For all other elements, use the CSS height property.        Note: In some instances, such as <div>, this is a legacy attribute, in which case the CSS height property should be used instead.", "required": false, "type": {"name": "string"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "sizes": {"description": "", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "src": {"description": "The URL of the embeddable content.", "required": false, "type": {"name": "string"}}, "srcSet": {"description": "", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}, "useMap": {"description": "", "required": false, "type": {"name": "string"}}, "width": {"description": "For the elements listed here, this establishes the element's width.        Note: For all other instances, such as <div>, this is a legacy attribute, in which case the CSS width property should be used instead.", "required": false, "type": {"name": "string"}}}}, "src/components/Ins.react.js": {"description": "", "displayName": "Ins", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "cite": {"description": "Contains a URI which points to the source of the quote or change.", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dateTime": {"description": "Indicates the date and time associated with the element.", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Isindex.react.js": {"description": "", "displayName": "Isindex", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Kbd.react.js": {"description": "", "displayName": "Kbd", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Keygen.react.js": {"description": "", "displayName": "Keygen", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "autoFocus": {"description": "The element should be automatically focused after the page loaded.", "required": false, "type": {"name": "string"}}, "challenge": {"description": "A challenge string that is submitted along with the public key.", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "disabled": {"description": "Indicates whether the user can interact with the element.", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "form": {"description": "Indicates the form that is the owner of the element.", "required": false, "type": {"name": "string"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "keyType": {"description": "Specifies the type of key generated.", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "name": {"description": "Name of the element. For example used by the server to identify the fields in form submits.", "required": false, "type": {"name": "string"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Label.react.js": {"description": "", "displayName": "Label", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "form": {"description": "Indicates the form that is the owner of the element.", "required": false, "type": {"name": "string"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "htmlFor": {"description": "Describes elements which belongs to this one.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Legend.react.js": {"description": "", "displayName": "Legend", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Li.react.js": {"description": "", "displayName": "Li", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}, "value": {"description": "Defines a default value which will be displayed in the element on page load.", "required": false, "type": {"name": "string"}}}}, "src/components/Link.react.js": {"description": "", "displayName": "Link", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "crossOrigin": {"description": "How the element handles cross-origin requests", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "href": {"description": "The URL of a linked resource.", "required": false, "type": {"name": "string"}}, "hrefLang": {"description": "Specifies the language of the linked resource.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "integrity": {"description": "Security Feature that allows browsers to verify what they fetch.     MDN Link", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "media": {"description": "Specifies a hint of the media for which the linked resource was designed.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "rel": {"description": "Specifies the relationship of the target object to the link object.", "required": false, "type": {"name": "string"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "sizes": {"description": "", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Listing.react.js": {"description": "", "displayName": "Listing", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Main.react.js": {"description": "", "displayName": "Main", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/MapEl.react.js": {"description": "", "displayName": "MapEl", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "name": {"description": "Name of the element. For example used by the server to identify the fields in form submits.", "required": false, "type": {"name": "string"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Mark.react.js": {"description": "", "displayName": "Mark", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Marquee.react.js": {"description": "", "displayName": "Marquee", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "loop": {"description": "Indicates whether the media should start playing from the start when it's finished.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Meta.react.js": {"description": "", "displayName": "Meta", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "charSet": {"description": "Declares the character encoding of the page or script.", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "content": {"description": "A value associated with http-equiv or name depending on the context.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "httpEquiv": {"description": "", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "name": {"description": "Name of the element. For example used by the server to identify the fields in form submits.", "required": false, "type": {"name": "string"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Meter.react.js": {"description": "", "displayName": "Meter", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "form": {"description": "Indicates the form that is the owner of the element.", "required": false, "type": {"name": "string"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "high": {"description": "Indicates the lower bound of the upper range.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "low": {"description": "Indicates the upper bound of the lower range.", "required": false, "type": {"name": "string"}}, "max": {"description": "Indicates the maximum value allowed.", "required": false, "type": {"name": "string"}}, "min": {"description": "Indicates the minimum value allowed.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "optimum": {"description": "Indicates the optimal numeric value.", "required": false, "type": {"name": "string"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}, "value": {"description": "Defines a default value which will be displayed in the element on page load.", "required": false, "type": {"name": "string"}}}}, "src/components/Multicol.react.js": {"description": "", "displayName": "Multicol", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Nav.react.js": {"description": "", "displayName": "Nav", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Nextid.react.js": {"description": "", "displayName": "Nextid", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Nobr.react.js": {"description": "", "displayName": "Nobr", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Noscript.react.js": {"description": "", "displayName": "Noscript", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/ObjectEl.react.js": {"description": "", "displayName": "ObjectEl", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "form": {"description": "Indicates the form that is the owner of the element.", "required": false, "type": {"name": "string"}}, "height": {"description": "Specifies the height of elements listed here. For all other elements, use the CSS height property.        Note: In some instances, such as <div>, this is a legacy attribute, in which case the CSS height property should be used instead.", "required": false, "type": {"name": "string"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "name": {"description": "Name of the element. For example used by the server to identify the fields in form submits.", "required": false, "type": {"name": "string"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}, "type": {"description": "Defines the type of the element.", "required": false, "type": {"name": "string"}}, "useMap": {"description": "", "required": false, "type": {"name": "string"}}, "width": {"description": "For the elements listed here, this establishes the element's width.        Note: For all other instances, such as <div>, this is a legacy attribute, in which case the CSS width property should be used instead.", "required": false, "type": {"name": "string"}}}}, "src/components/Ol.react.js": {"description": "", "displayName": "Ol", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "reversed": {"description": "Indicates whether the list should be displayed in a descending order instead of a ascending.", "required": false, "type": {"name": "string"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "start": {"description": "Defines the first number if other than 1.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Optgroup.react.js": {"description": "", "displayName": "Optgroup", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "disabled": {"description": "Indicates whether the user can interact with the element.", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Option.react.js": {"description": "", "displayName": "Option", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "disabled": {"description": "Indicates whether the user can interact with the element.", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "selected": {"description": "Defines a value which will be selected on page load.", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}, "value": {"description": "Defines a default value which will be displayed in the element on page load.", "required": false, "type": {"name": "string"}}}}, "src/components/Output.react.js": {"description": "", "displayName": "Output", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "form": {"description": "Indicates the form that is the owner of the element.", "required": false, "type": {"name": "string"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "htmlFor": {"description": "Describes elements which belongs to this one.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "name": {"description": "Name of the element. For example used by the server to identify the fields in form submits.", "required": false, "type": {"name": "string"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/P.react.js": {"description": "", "displayName": "P", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Param.react.js": {"description": "", "displayName": "Param", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "name": {"description": "Name of the element. For example used by the server to identify the fields in form submits.", "required": false, "type": {"name": "string"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}, "value": {"description": "Defines a default value which will be displayed in the element on page load.", "required": false, "type": {"name": "string"}}}}, "src/components/Picture.react.js": {"description": "", "displayName": "Picture", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Plaintext.react.js": {"description": "", "displayName": "Plaintext", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Pre.react.js": {"description": "", "displayName": "Pre", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Progress.react.js": {"description": "", "displayName": "Progress", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "form": {"description": "Indicates the form that is the owner of the element.", "required": false, "type": {"name": "string"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "max": {"description": "Indicates the maximum value allowed.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}, "value": {"description": "Defines a default value which will be displayed in the element on page load.", "required": false, "type": {"name": "string"}}}}, "src/components/Q.react.js": {"description": "", "displayName": "Q", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "cite": {"description": "Contains a URI which points to the source of the quote or change.", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Rb.react.js": {"description": "", "displayName": "Rb", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Rp.react.js": {"description": "", "displayName": "Rp", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Rt.react.js": {"description": "", "displayName": "Rt", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Rtc.react.js": {"description": "", "displayName": "Rtc", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Ruby.react.js": {"description": "", "displayName": "Ruby", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/S.react.js": {"description": "", "displayName": "S", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Samp.react.js": {"description": "", "displayName": "Samp", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Script.react.js": {"description": "", "displayName": "Script", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "async": {"description": "Indicates that the script should be executed asynchronously.", "required": false, "type": {"name": "string"}}, "charSet": {"description": "Declares the character encoding of the page or script.", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "crossOrigin": {"description": "How the element handles cross-origin requests", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "defer": {"description": "Indicates that the script should be executed after the page has been parsed.", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "integrity": {"description": "Security Feature that allows browsers to verify what they fetch.     MDN Link", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "src": {"description": "The URL of the embeddable content.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}, "type": {"description": "Defines the type of the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Section.react.js": {"description": "", "displayName": "Section", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Select.react.js": {"description": "", "displayName": "Select", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "autoFocus": {"description": "The element should be automatically focused after the page loaded.", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "disabled": {"description": "Indicates whether the user can interact with the element.", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "form": {"description": "Indicates the form that is the owner of the element.", "required": false, "type": {"name": "string"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "multiple": {"description": "Indicates whether multiple values can be entered in an input of the type email or file.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "name": {"description": "Name of the element. For example used by the server to identify the fields in form submits.", "required": false, "type": {"name": "string"}}, "required": {"description": "Indicates whether this element is required to fill out or not.", "required": false, "type": {"name": "string"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "size": {"description": "Defines the width of the element (in pixels). If the element's type attribute is text or password then it's the number of characters.", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Shadow.react.js": {"description": "", "displayName": "Shadow", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Slot.react.js": {"description": "", "displayName": "Slot", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Small.react.js": {"description": "", "displayName": "Small", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Source.react.js": {"description": "", "displayName": "Source", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "media": {"description": "Specifies a hint of the media for which the linked resource was designed.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "sizes": {"description": "", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "src": {"description": "The URL of the embeddable content.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}, "type": {"description": "Defines the type of the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Spacer.react.js": {"description": "", "displayName": "Spacer", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Span.react.js": {"description": "", "displayName": "Span", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Strike.react.js": {"description": "", "displayName": "Strike", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Strong.react.js": {"description": "", "displayName": "Strong", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Sub.react.js": {"description": "", "displayName": "Sub", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Summary.react.js": {"description": "", "displayName": "Summary", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Sup.react.js": {"description": "", "displayName": "Sup", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Table.react.js": {"description": "", "displayName": "Table", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "summary": {"description": "", "required": false, "type": {"name": "string"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Tbody.react.js": {"description": "", "displayName": "Tbody", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Td.react.js": {"description": "", "displayName": "Td", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "colSpan": {"description": "The colspan attribute defines the number of columns a cell should span.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "headers": {"description": "IDs of the <th> elements which applies to this element.", "required": false, "type": {"name": "string"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "rowSpan": {"description": "Defines the number of rows a table cell should span over.", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Template.react.js": {"description": "", "displayName": "Template", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Textarea.react.js": {"description": "", "displayName": "Textarea", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "autoComplete": {"description": "Indicates whether controls in this form can by default have their values automatically completed by the browser.", "required": false, "type": {"name": "string"}}, "autoFocus": {"description": "The element should be automatically focused after the page loaded.", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "cols": {"description": "Defines the number of columns in a textarea.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "disabled": {"description": "Indicates whether the user can interact with the element.", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "form": {"description": "Indicates the form that is the owner of the element.", "required": false, "type": {"name": "string"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "maxLength": {"description": "Defines the maximum number of characters allowed in the element.", "required": false, "type": {"name": "string"}}, "minLength": {"description": "Defines the minimum number of characters allowed in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "name": {"description": "Name of the element. For example used by the server to identify the fields in form submits.", "required": false, "type": {"name": "string"}}, "placeholder": {"description": "Provides a hint to the user of what can be entered in the field.", "required": false, "type": {"name": "string"}}, "readOnly": {"description": "Indicates whether the element can be edited.", "required": false, "type": {"name": "string"}}, "required": {"description": "Indicates whether this element is required to fill out or not.", "required": false, "type": {"name": "string"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "rows": {"description": "Defines the number of rows in a text area.", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}, "wrap": {"description": "Indicates whether the text should be wrapped.", "required": false, "type": {"name": "string"}}}}, "src/components/Tfoot.react.js": {"description": "", "displayName": "Tfoot", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Th.react.js": {"description": "", "displayName": "Th", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "colSpan": {"description": "The colspan attribute defines the number of columns a cell should span.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "headers": {"description": "IDs of the <th> elements which applies to this element.", "required": false, "type": {"name": "string"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "rowSpan": {"description": "Defines the number of rows a table cell should span over.", "required": false, "type": {"name": "string"}}, "scope": {"description": "Defines the cells that the header test (defined in the th element) relates to.", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Thead.react.js": {"description": "", "displayName": "Thead", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Time.react.js": {"description": "", "displayName": "Time", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dateTime": {"description": "Indicates the date and time associated with the element.", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Title.react.js": {"description": "", "displayName": "Title", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Tr.react.js": {"description": "", "displayName": "Tr", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Track.react.js": {"description": "", "displayName": "Track", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "default": {"description": "Indicates that the track should be enabled unless the user's preferences indicate something different.", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "kind": {"description": "Specifies the kind of text track.", "required": false, "type": {"name": "string"}}, "label": {"description": "Specifies a user-readable title of the text track.", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "src": {"description": "The URL of the embeddable content.", "required": false, "type": {"name": "string"}}, "srcLang": {"description": "", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/U.react.js": {"description": "", "displayName": "U", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Ul.react.js": {"description": "", "displayName": "Ul", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Var.react.js": {"description": "", "displayName": "Var", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Video.react.js": {"description": "", "displayName": "Video", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "autoPlay": {"description": "The audio or video should play as soon as possible.", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "controls": {"description": "Indicates whether the browser should show playback controls to the user.", "required": false, "type": {"name": "string"}}, "crossOrigin": {"description": "How the element handles cross-origin requests", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "height": {"description": "Specifies the height of elements listed here. For all other elements, use the CSS height property.        Note: In some instances, such as <div>, this is a legacy attribute, in which case the CSS height property should be used instead.", "required": false, "type": {"name": "string"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "loop": {"description": "Indicates whether the media should start playing from the start when it's finished.", "required": false, "type": {"name": "string"}}, "muted": {"description": "Indicates whether the audio will be initially silenced on page load.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "poster": {"description": "A URL indicating a poster frame to show until the user plays or seeks.", "required": false, "type": {"name": "string"}}, "preload": {"description": "Indicates whether the whole resource, parts of it or nothing should be preloaded.", "required": false, "type": {"name": "string"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "src": {"description": "The URL of the embeddable content.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}, "width": {"description": "For the elements listed here, this establishes the element's width.        Note: For all other instances, such as <div>, this is a legacy attribute, in which case the CSS width property should be used instead.", "required": false, "type": {"name": "string"}}}}, "src/components/Wbr.react.js": {"description": "", "displayName": "Wbr", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}, "src/components/Xmp.react.js": {"description": "", "displayName": "Xmp", "methods": [], "props": {"accessKey": {"description": "Defines a keyboard shortcut to activate or add focus to the element.", "required": false, "type": {"name": "string"}}, "aria-*": {"description": "A wildcard aria attribute", "required": false, "type": {"name": "string"}}, "className": {"description": "Often used with CSS to style elements with common properties.", "required": false, "type": {"name": "string"}}, "contentEditable": {"description": "Indicates whether the element's content is editable.", "required": false, "type": {"name": "string"}}, "contextMenu": {"description": "Defines the ID of a <menu> element which will serve as the element's context menu.", "required": false, "type": {"name": "string"}}, "dashEvents": {"description": "", "required": false, "type": {"name": "enum", "value": [{"computed": false, "value": "'click'"}]}}, "data-*": {"description": "A wildcard data attribute", "required": false, "type": {"name": "string"}}, "dir": {"description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)", "required": false, "type": {"name": "string"}}, "draggable": {"description": "Defines whether the element can be dragged.", "required": false, "type": {"name": "string"}}, "fireEvent": {"description": "A callback for firing events to dash.", "required": false, "type": {"name": "func"}}, "hidden": {"description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active.", "required": false, "type": {"name": "string"}}, "id": {"description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app.", "required": false, "type": {"name": "string"}}, "key": {"description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info", "required": false, "type": {"name": "string"}}, "lang": {"description": "Defines the language used in the element.", "required": false, "type": {"name": "string"}}, "n_clicks": {"defaultValue": {"computed": false, "value": "0"}, "description": "An integer that represents the number of times\nthat this element has been clicked on.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "n_clicks_timestamp": {"defaultValue": {"computed": false, "value": "-1"}, "description": "An integer that represents the time (in ms since 1970)\nat which n_clicks changed. This can be used to tell\nwhich button was changed most recently.", "required": false, "type": {"name": "custom", "raw": "PropTypes.integer"}}, "role": {"description": "The ARIA role attribute", "required": false, "type": {"name": "string"}}, "spellCheck": {"description": "Indicates whether spell checking is allowed for the element.", "required": false, "type": {"name": "string"}}, "style": {"description": "Defines CSS styles which will override styles previously set.", "required": false, "type": {"name": "object"}}, "tabIndex": {"description": "Overrides the browser's default tab order and follows the one specified instead.", "required": false, "type": {"name": "string"}}, "title": {"description": "Text to be displayed in a tooltip when hovering over the element.", "required": false, "type": {"name": "string"}}}}}